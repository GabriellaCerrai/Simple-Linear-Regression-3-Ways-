# ==========================
# SIMPLE LINEAR REGRESSION
# ==========================

#------------------------------
# 1. Python using statsmodels
#------------------------------
  
# import packages:
import numpy as np 
import pandas as pd 
import statsmodels.api as sm 

data = pd.read_csv('real_estate_price_size_year.csv')
# declare variables: 
x1 = data[['size','year']]
y = data['price']

# define model: 
x = sm.add_constant(x1)
model = sm.OLS(y,x).fit()
model.summary()

#------------------------------
# 2. Python using Scikit Learn
#------------------------------

# import packages
import numpy as np
import pandas as pd
import sklearn
from sklearn.feature_selection import f_regression
from sklearn.linear_model import LinearRegression

data = pd.read_csv('real_estate_price_size_year.csv')
# declare variables: 
x = data[['size','year']]
y = data['price']

# define model:
model = LinearRegression()
model.fit(x,y)

model.intercept_
model.coef_

# r2 value:
model.score(x,y)

# adjusted r2 value:
def r2_adj(x,y):
    r2 = model.score(x,y)
    n = f_regression(x,y)[0]             # no. of observations 
    p = f_regression(x,y)[1]             # no. of paramaters 
    adjusted_r2 = 1-(1-r2)*(n-1)/(n-p-1) # standard formula 
    return adjusted_r2                   # or return adjusted_r2[0] if function returns the corresponding p-value as well 

r2_adj(x,y)[0]

#Finally, create a summary table: 
results = pd.DataFrame(data = x.columns.values, columns = ['Features'])
results['Coefficients'] = model.coef_.round(3)
results['P-values'] = f_regression(x,y)[1].round(3)
results

#--------------------------------------
# 3. R using the linear model function
#--------------------------------------

data = read.csv('real_estate_price_size_year.csv', header = TRUE)
head(data)
attach(data)
options(scipen=999)

model = lm(price~size+year, data = data)
summary(model)


# or create own summary table: 
table = matrix(NA, ncol = 1, nrow = 5) # create blank table 
table[1,] = coefs[1]
table[2,] = coefs[2]
table[3,] = coefs[3]
table[4,] = round(summary(model)$r.squared,3)
table[5,] = round(summary(model)$adj.r.squared,3)
rownames(table) = c('Interept Coefficient','Size Coefficient','Year Coefficient','R2','Adjusted R2')
colnames(table) = c('Value')
table

# using a simple loop to populate the coefficients:
table2 = matrix(NA, ncol = 1, nrow = 3)
colnames(table2) = c('Value')
rownames(table2) = c('Intercept Coefficient','Size Coefficient ','Year Coefficient')
for (i in seq(1,3))
{
  table2[i,] = coefs[i]
}
table2
